import { AnimationItem, AnimationConfigWithPath, AnimationConfigWithData } from 'lottie-web';
import { Element } from './element.js';
import { LottieAnimationLoader } from '../interfaces.js';
/**
 * Register new icon. Notify all instances about it.
 * @param name
 * @param iconData
 */
export declare function registerIcon(name: string, iconData: any): void;
/**
 * Register new trigger. Notify all instances about it.
 * @param name
 * @param triggerClass
 */
export declare function registerTrigger(name: string, triggerClass: any): void;
/**
 * Register lottie "loadAnimation" method.
 * @param animationLoader
 */
export declare function registerAnimationLoader(animationLoader: LottieAnimationLoader): void;
/**
 * Store element instance.
 * @param element
 */
export declare function connectInstance(element: Element): void;
/**
 * Remove element instance.
 * @param element
 */
export declare function disconnectInstance(element: Element): void;
/**
 * Get stored icon.
 * @param name
 */
export declare function getIcon(name: string): any;
/**
 * Get stored trigger.
 * @param name
 */
export declare function getTrigger(name: string): any;
/**
 * Fetch icon data from server.
 * @param url
 */
export declare function loadIconData(url: string): Promise<any>;
/**
 * Load icon from url. This method tries to load single icon only once.
 * @param url
 */
export declare function loadIcon(url: string): Promise<void>;
/**
 * Execute animation loading with provided "loadAnimation".
 * @param params
 */
export declare function loadLottieAnimation(params: AnimationConfigWithPath | AnimationConfigWithData): AnimationItem;

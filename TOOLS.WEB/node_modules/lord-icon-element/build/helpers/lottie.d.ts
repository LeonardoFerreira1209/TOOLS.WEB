import { ILottieProperty, IRGBColor, LordiconFeature, LottieColor } from '../interfaces.js';
/**
 * Convert from color object to hex value.
 * @param value
 * @returns
 */
export declare function rgbToHex(value: IRGBColor): string;
/**
 * Conver from hex to color object.
 * @param hex
 * @returns
 */
export declare function hexToRgb(hex: string): IRGBColor;
/**
 * Helper method for scale value.
 * @param n
 * @returns
 */
export declare function toUnitVector(n: number): number;
/**
 * Helper method for scale value.
 * @param n
 * @returns
 */
export declare function fromUnitVector(n: number): number;
/**
 * Helper method for lottie color.
 * @param hex
 * @returns
 */
export declare function hexToLottieColor(hex: string): LottieColor;
/**
 * Conver from lottie color to hex.
 * @param value
 * @returns
 */
export declare function lottieColorToHex(value: number[]): string;
/**
 * Return all supported properties for provided icon.
 * @param data Icon data.
 * @param lottieInstance Provide property path for running lottie instance.
 * @returns
 */
export declare function allProperties(data: any, lottieInstance?: boolean): ILottieProperty[];
/**
 * Reset single color.
 * @param data
 * @param properties
 * @param name
 */
export declare function resetColor(data: any, properties: ILottieProperty[], name: string): void;
/**
 * Update single color.
 * @param data
 * @param properties
 * @param name
 * @param value
 */
export declare function updateColor(data: any, properties: ILottieProperty[], name: string, value: any): any;
/**
 * Reset colors to original.
 * @param data
 * @param properties
 */
export declare function resetColors(data: any, properties: ILottieProperty[]): void;
/**
 * Update colors.
 * @param data
 * @param properties
 * @param colors
 */
export declare function updateColors(data: any, properties: ILottieProperty[], colors: string): any;
/**
 * Reset property to orignal value.
 * @param data
 * @param properties
 * @param name
 * @param extraPath
 */
export declare function resetProperty(data: any, properties: ILottieProperty[], name: string, extraPath?: string): any;
/**
 * Update property.
 * @param data
 * @param properties
 * @param name
 * @param value
 * @param extraPath
 */
export declare function updateProperty(data: any, properties: ILottieProperty[], name: string, value: any, extraPath?: string): any;
/**
 * Replace property value.
 * @param data
 * @param properties
 * @param name
 * @param value
 * @param extraPath
 */
export declare function replaceProperty(data: any, properties: ILottieProperty[], name: string, value: any, extraPath?: string): any;
/**
 * Return list of features.
 * @param data
 * @returns
 */
export declare function iconFeatures(data: any): LordiconFeature[];
